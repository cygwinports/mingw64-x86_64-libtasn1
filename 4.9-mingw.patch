--- origsrc/libtasn1-4.9/src/benchmark.c	2014-11-14 13:53:32.000000000 -0600
+++ src/libtasn1-4.9/src/benchmark.c	2016-08-28 15:48:53.624442300 -0500
@@ -30,6 +30,7 @@ int benchmark_must_finish = 0;
 
 #if defined _WIN32
 #include <windows.h>
+DWORD WINAPI alarm_handler (LPVOID);
 DWORD WINAPI
 alarm_handler (LPVOID lpParameter)
 {
@@ -94,20 +95,20 @@ start_benchmark (struct benchmark_st *st
   st->wtimer = CreateWaitableTimer (NULL, TRUE, NULL);
   if (st->wtimer == NULL)
     {
-      fprintf (stderr, "error: CreateWaitableTimer %u\n", GetLastError ());
+      fprintf (stderr, "error: CreateWaitableTimer %lu\n", GetLastError ());
       exit (1);
     }
   st->wthread = CreateThread (NULL, 0, alarm_handler, &st->wtimer, 0, NULL);
   if (st->wthread == NULL)
     {
-      fprintf (stderr, "error: CreateThread %u\n", GetLastError ());
+      fprintf (stderr, "error: CreateThread %lu\n", GetLastError ());
       exit (1);
     }
   st->alarm_timeout.QuadPart = (5) * 10000000;
   if (SetWaitableTimer (st->wtimer, &st->alarm_timeout, 0, NULL, NULL, FALSE)
       == 0)
     {
-      fprintf (stderr, "error: SetWaitableTimer %u\n", GetLastError ());
+      fprintf (stderr, "error: SetWaitableTimer %lu\n", GetLastError ());
       exit (1);
     }
 #else
